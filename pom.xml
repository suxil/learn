<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.github.suxil</groupId>
	<artifactId>learn</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>learn</name>
	<url>http://maven.apache.org</url>

	<scm>
		<connection>scm:git:git@github.com:suxi-lu/learn.git</connection>
		<developerConnection>scm:git:git@github.com:suxi-lu/learn.git</developerConnection>
		<url>https://github.com/suxi-lu/learn</url>
		<tag>0.0.1-SNAPSHOT</tag>
	</scm>

	<modules>
		<module>dependencies</module>

		<module>core</module>
		<module>mybatis-core</module>

		<module>generate</module>

		<module>auth-api</module>
		<module>auth-service</module>

		<module>learn-api</module>
		<module>learn-service</module>
	</modules>

	<properties>
		<java.version>8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<lombok.version>1.18.12</lombok.version>
		<lombok.plugin.version>1.18.10.0</lombok.plugin.version>

		<mapstruct.version>1.3.1.Final</mapstruct.version>

		<spring-boot-maven-plugin.version>2.2.2.RELEASE</spring-boot-maven-plugin.version>
		<maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>

		<openapi-generator-maven-plugin.version>4.2.3</openapi-generator-maven-plugin.version>

		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
		<docker-maven-plugin.version>1.2.1</docker-maven-plugin.version>

		<maven-release-plugin.version>3.0.0-M1</maven-release-plugin.version>

		<docker.repostory>192.168.89.128:5000</docker.repostory>
		<dockerHost>https://192.168.89.128:2376</dockerHost>
	</properties>

	<repositories>
		<repository>
			<id>nexus-aliyun</id>
			<name>Nexus aliyun</name>
			<url>https://maven.aliyun.com/repository/central</url>
		</repository>
		<repository>
			<id>aliyun-spring</id>
			<name>Spring Releases</name>
			<url>https://maven.aliyun.com/repository/spring</url>
		</repository>
		<repository>
			<id>aliyun-jcenter</id>
			<name>Jcenter</name>
			<url>https://maven.aliyun.com/repository/jcenter</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<source>8</source>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
					<configuration>
						<repository>192.168.159.137:31003/learn/${project.groupId}/${project.artifactId}</repository>
						<tag>${project.version}</tag>
						<buildArgs>
							<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
						</buildArgs>
						<dockerfile>${project.basedir}/src/main/docker/Dockerfile</dockerfile>
						<username>learn</username>
						<password>Harbor12345</password>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<configuration>
						<!--指定镜像名称 仓库/镜像名:标签-->
						<imageName>${project.groupId}/${project.artifactId}:${project.version}</imageName>
						<!--指定Dockerfile路径-->
						<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
						<!-- 指定仓库地址 -->
						<dockerHost>${dockerHost}</dockerHost>
						<!--覆盖相同标签镜像-->
						<forceTags>true</forceTags>
						<!--如果docker开户远程了tls认证，侧需要把相关的客户的key给放到本地，然后指定路径-->
						<dockerCertPath>${project.basedir}/../cert</dockerCertPath>
						<!-- copy the service's jar file from target into the root directory of the image -->
						<resources>
							<!-- 指定资源文件 -->
							<resource>
								<!-- 指定要复制的目录路径，这里是当前目录 -->
								<targetPath>/</targetPath>
								<!-- 指定要复制的根目录，这里是target目录 -->
								<directory>${project.build.directory}</directory>
								<!-- 指定需要拷贝的文件，这里指最后生成的jar包 -->
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<arguments>-DskipTests</arguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>${lombok.plugin.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>

		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>io.github.suxil</groupId>
				<artifactId>dependencies</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

</project>
